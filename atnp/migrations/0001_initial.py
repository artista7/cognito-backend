# Generated by Django 2.2.4 on 2019-09-26 16:46

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('username', models.CharField(db_column='userName', max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('phoneNumber', models.CharField(db_column='phoneNumber', max_length=255)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField()),
                ('status', models.CharField(max_length=255)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
            ],
            options={
                'db_table': 'admin',
            },
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('alias', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(max_length=255)),
                ('allowedDomains', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='allowedDomains', null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('status', models.CharField(max_length=255)),
                ('primaryContactJson', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'college',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('status', models.CharField(max_length=255)),
                ('primaryContactJson', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='CompanyInDrive',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('status', models.CharField(max_length=255)),
                ('reviewedby', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='reviewedBy', null=True)),
                ('company', models.ForeignKey(db_column='company', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.Company')),
            ],
            options={
                'db_table': 'companyindrive',
            },
        ),
        migrations.CreateModel(
            name='Drive',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('startDate', models.DateTimeField(db_column='startDate')),
                ('endDate', models.DateTimeField(db_column='endDate')),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('college', models.ForeignKey(db_column='college', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.College')),
            ],
            options={
                'db_table': 'drive',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('organizationId', models.CharField(db_column='organizationId', max_length=32)),
                ('organizationType', models.CharField(db_column='organizationType', max_length=255)),
                ('permission', django.contrib.postgres.fields.jsonb.JSONField()),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
            ],
            options={
                'db_table': 'group',
            },
        ),
        migrations.CreateModel(
            name='IsServiceEnabled',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('reasonForDisable', models.CharField(db_column='reasonForDisable', max_length=255)),
                ('isEnabled', models.CharField(db_column='isEnabled', max_length=255)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
            ],
            options={
                'db_table': 'isserviceenabled',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('positionType', models.CharField(db_column='positionType', max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('skills', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('ctcJson', django.contrib.postgres.fields.jsonb.JSONField(db_column='ctcJson')),
                ('requirements', models.CharField(max_length=255)),
                ('responsibilities', models.CharField(max_length=255)),
                ('criteriaJson', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('equityJson', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='equityJson', null=True)),
                ('company', models.ForeignKey(db_column='company', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.Company')),
            ],
            options={
                'db_table': 'job',
            },
        ),
        migrations.CreateModel(
            name='JobOpening',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('positionType', models.CharField(db_column='positionType', max_length=255)),
                ('role', models.CharField(blank=True, max_length=255, null=True)),
                ('skills', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('ctcJson', django.contrib.postgres.fields.jsonb.JSONField(db_column='ctcJson')),
                ('equityJson', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='equityJson', null=True)),
                ('requirements', models.CharField(blank=True, max_length=255, null=True)),
                ('responsibilities', models.CharField(blank=True, max_length=255, null=True)),
                ('criteriaJson', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('companyInDrive', models.ForeignKey(db_column='companyInDrive', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.CompanyInDrive')),
                ('job', models.ForeignKey(db_column='job', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.Job')),
            ],
            options={
                'db_table': 'jobopening',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('actionId', models.CharField(db_column='actionId', max_length=255)),
                ('recepientEmail', models.CharField(db_column='recepientEmail', max_length=255)),
                ('recepientPhone', models.CharField(db_column='recepientPhone', max_length=255)),
                ('messageBody', models.CharField(db_column='messageBody', max_length=255)),
                ('messageSubject', models.CharField(db_column='messageSubject', max_length=255)),
                ('messageSMS', models.CharField(db_column='messageSMS', max_length=255)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='Picklist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('list', django.contrib.postgres.fields.jsonb.JSONField()),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
            ],
            options={
                'db_table': 'picklist',
            },
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('resumeUrl', models.CharField(blank=True, db_column='resumeUrl', max_length=255, null=True)),
                ('isEditable', models.CharField(blank=True, db_column='isEditable', max_length=255, null=True)),
                ('resumeJson', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='resumeJson', null=True)),
                ('versioningJson', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='versioningJson', null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
            ],
            options={
                'db_table': 'resume',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('aboutMe', models.CharField(blank=True, db_column='aboutMe', max_length=255, null=True)),
                ('education', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('userName', models.CharField(db_column='userName', max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('credits', models.CharField(blank=True, max_length=255, null=True)),
                ('profilePicS3Path', models.CharField(blank=True, db_column='profilePicS3Path', max_length=255, null=True)),
                ('phoneNumber', models.CharField(db_column='phoneNumber', max_length=255)),
                ('skills', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('projects', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('todo', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('accomplishments', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('personalInfo', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='personalInfo', null=True)),
                ('status', models.TextField()),
                ('work', models.CharField(blank=True, max_length=255, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='StudentInDrive',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('registrationCode', models.CharField(blank=True, db_column='registrationCode', max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('studentCollegeId', models.CharField(blank=True, db_column='studentCollegeId', max_length=255, null=True)),
                ('studentName', models.CharField(blank=True, db_column='studentName', max_length=255, null=True)),
                ('studentMail', models.CharField(blank=True, db_column='studentMail', max_length=255, null=True)),
                ('studentPhone', models.CharField(blank=True, db_column='studentPhone', max_length=255, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('studentMetadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='studentMetadata', null=True)),
                ('proofs', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('drive', models.ForeignKey(db_column='drive', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.Drive')),
                ('student', models.ForeignKey(db_column='student', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.Student')),
            ],
            options={
                'db_table': 'studentindrive',
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('manager', models.CharField(blank=True, max_length=255, null=True)),
                ('canEdit', models.CharField(blank=True, db_column='canEdit', max_length=255, null=True)),
                ('canDelete', models.CharField(blank=True, db_column='canDelete', max_length=255, null=True)),
                ('isInterview', models.CharField(blank=True, db_column='isInterview', max_length=255, null=True)),
                ('endTime', models.DateTimeField(blank=True, db_column='endTime', null=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('startTime', models.DateTimeField(blank=True, db_column='startTime', null=True)),
                ('jobOpening', models.ForeignKey(db_column='jobOpening', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.JobOpening')),
                ('nextRound', models.ForeignKey(blank=True, db_column='nextRound', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.Round')),
            ],
            options={
                'db_table': 'round',
            },
        ),
        migrations.CreateModel(
            name='ResumeReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=255)),
                ('resumeUrl', models.CharField(blank=True, db_column='resumeUrl', max_length=255, null=True)),
                ('isEditable', models.CharField(blank=True, db_column='isEditable', max_length=255, null=True)),
                ('resumeJson', models.TextField(blank=True, db_column='resumeJson', null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('reviewedBy', models.TextField(blank=True, db_column='reviewedBy', null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('resume', models.ForeignKey(db_column='resume', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.Resume')),
            ],
            options={
                'db_table': 'resumereview',
            },
        ),
        migrations.CreateModel(
            name='ResumeOpening',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('s3Path', models.TextField(blank=True, db_column='s3Path', max_length=255, null=True)),
                ('isEditable', models.CharField(blank=True, db_column='isEditable', max_length=255, null=True)),
                ('resumeJson', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='resumeJson', null=True)),
                ('proofs', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('commentJson', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='commentJson', null=True)),
                ('versioningJson', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='versioningJson', null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('reviewedBy', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='reviewedBy', null=True)),
                ('comments', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('resume', models.ForeignKey(db_column='resume', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.Resume')),
                ('studentInDrive', models.ForeignKey(db_column='studentInDrive', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.StudentInDrive')),
            ],
            options={
                'db_table': 'resumeopening',
            },
        ),
        migrations.AddField(
            model_name='resume',
            name='student',
            field=models.ForeignKey(db_column='student', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.Student'),
        ),
        migrations.AddField(
            model_name='companyindrive',
            name='driveId',
            field=models.ForeignKey(db_column='drive', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.Drive'),
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('previousRounds', django.contrib.postgres.fields.jsonb.JSONField(blank=True, db_column='previousRounds', null=True)),
                ('status', models.CharField(max_length=255)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='createdAt')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updatedAt')),
                ('jobOpening', models.ForeignKey(db_column='jobOpening', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.JobOpening')),
                ('nextApplicant', models.ForeignKey(blank=True, db_column='nextApplicant', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.Application')),
                ('resumeOpeningId', models.ForeignKey(db_column='resumeOpening', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.ResumeOpening')),
                ('round', models.ForeignKey(db_column='round', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.Round')),
                ('studentInDrive', models.ForeignKey(db_column='studentInDrive', on_delete=django.db.models.deletion.DO_NOTHING, to='atnp.StudentInDrive')),
            ],
            options={
                'db_table': 'application',
            },
        ),
    ]
